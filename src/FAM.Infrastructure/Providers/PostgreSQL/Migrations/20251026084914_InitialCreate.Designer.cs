// <auto-generated />
using System;
using FAM.Infrastructure.Providers.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FAM.Infrastructure.Providers.PostgreSQL.Migrations
{
    [DbContext(typeof(PostgreSqlDbContext))]
    [Migration("20251026084914_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.AssetEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_by_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by_id");

                    b.Property<long?>("UserEfId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_ef_id");

                    b.HasKey("Id")
                        .HasName("pk_assets");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_assets_company_id");

                    b.HasIndex("UserEfId")
                        .HasDatabaseName("ix_assets_user_ef_id");

                    b.ToTable("assets");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.CompanyEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_by_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tax_code");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_companies_name");

                    b.HasIndex("TaxCode")
                        .IsUnique()
                        .HasDatabaseName("ix_companies_tax_code")
                        .HasFilter("is_deleted = false");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.FinanceEntryEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_by_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by_id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_finance_entries");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_finance_entries_user_id");

                    b.ToTable("finance_entries");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.LocationEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_by_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("pk_locations");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_locations_company_id");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.SupplierEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_by_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedById")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by_id");

                    b.HasKey("Id")
                        .HasName("pk_suppliers");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_suppliers_company_id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.UserEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("full_name");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email")
                        .HasFilter("is_deleted = false");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_users_username")
                        .HasFilter("is_deleted = false");

                    b.ToTable("users");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.AssetEf", b =>
                {
                    b.HasOne("FAM.Infrastructure.PersistenceModels.Ef.CompanyEf", "Company")
                        .WithMany("Assets")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_assets_companies_company_id");

                    b.HasOne("FAM.Infrastructure.PersistenceModels.Ef.UserEf", "UserEf")
                        .WithMany("OwnedAssets")
                        .HasForeignKey("UserEfId")
                        .HasConstraintName("fk_assets_users_user_ef_id");

                    b.Navigation("Company");

                    b.Navigation("UserEf");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.FinanceEntryEf", b =>
                {
                    b.HasOne("FAM.Infrastructure.PersistenceModels.Ef.UserEf", "User")
                        .WithMany("FinanceEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_finance_entries_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.LocationEf", b =>
                {
                    b.HasOne("FAM.Infrastructure.PersistenceModels.Ef.CompanyEf", "Company")
                        .WithMany("Locations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_locations_companies_company_id");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.SupplierEf", b =>
                {
                    b.HasOne("FAM.Infrastructure.PersistenceModels.Ef.CompanyEf", "Company")
                        .WithMany("Suppliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_suppliers_companies_company_id");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.CompanyEf", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Locations");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("FAM.Infrastructure.PersistenceModels.Ef.UserEf", b =>
                {
                    b.Navigation("FinanceEntries");

                    b.Navigation("OwnedAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
